services:
  mysql8:
    image: mysql:8.0
    hostname: db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      TZ: Asia/Shanghai
    ports:
      - mode: ingress
        target: 3306
        published: 3306
        protocol: tcp
    command: --max_connections=1000
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "db", "-u", "root", "-p123456", "--silent"]
      interval: 10s       # 检查间隔
      timeout: 5s         # 单次检查超时时间
      retries: 10         # 重试次数（增加次数，给足初始化时间）
      start_period: 300s   # 启动宽限期（首次检查前等待300秒，让MySQL有时间初始化）

  redis7:
    image: redis:7.2-alpine # 使用官方 Redis 镜像
    hostname: redisX
    ports:
      - mode: ingress
        target: 6379
        published: 6379
        protocol: tcp
    command: redis-server --appendonly yes # 启用 AOF 持久化

  prometheus:
    image: prom/prometheus:v2.47.0
    ports:
      - mode: ingress
        target: 9090
        published: 9090
        protocol: tcp
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:10.1.5
    user: "${$UID:0}:${$GID:0}"  # 使用环境变量或默认值
    ports:
      - mode: ingress
        target: 3000
        published: 3000
        protocol: tcp
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin


  # mysqld-exporter:
  #   image: prom/mysqld-exporter
  #   hostname: mysqld-exporter
  #   ports:
  #     - mode: ingress
  #       target: 9104
  #       published: 9104
  #       protocol: tcp

  # etcdService:
  #   image: bitnami/etcd:3.6.1
  #   ports:
  #     - mode: ingress
  #       target: 2379
  #       published: 2379
  #       protocol: tcp
  #     - mode: ingress
  #       target: 2380
  #       published: 2380
  #       protocol: tcp
  #   environment:
  #     # 允许无认证启动
  #     - ALLOW_NONE_AUTHENTICATION=yes
  #     # 向客户端通告的URL
  #     - ETCD_ADVERTISE_CLIENT_URLS=http://0.0.0.0:2379
  #     # 监听客户端连接的地址
  #     - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
  #   # networks:
  #   #   - app_network
  #   # command: >
  #   #   sh -c "
  #   #     sleep 5 &&
  #   #     # 从文件导入所有键值对
  #   #     etcdctl --endpoints=http://localhost:2379 put '/service/comet/v1.0.0/config' '{\"TrafficTags\":[\"default\"],\"DepServices\":[\"auth\"]}' &&
  #   #     etcdctl --endpoints=http://localhost:2379 put '/service/auth/v1.0.0/config' '{\"TrafficTags\":[\"default\"],\"DepServices\":[\"\"]}' &&
  #   #     /opt/bitnami/scripts/etcd/run.sh
  #   #   "

  # auth:
  #   image: ruandao/im-auth:latest
  #   ports:
  #     - mode: ingress
  #       target: 8080
  #       published: 8080
  #       protocol: tcp
  #   depends_on:
  #     - etcdService
  #   networks:
  #     - default

  # comet:
  #   build:
  #     context: ..
  #     dockerfile: ./src/Comet/Dockerfile  # 指定自定义Dockerfile文件名
  #   ports:
  #     - "8181:8181"
  #   depends_on:
  #     - etcdService
  #   networks:
  #     - default
# networks:
#   app_network:
#     driver: bridge
